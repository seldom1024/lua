---
---Lua 变量
---变量在使用前，必须在代码中进行声明，即创建该变量。
---编译程序执行代码之前编译器需要知道如何给语句变量开辟存储区，用于存储变量的值。
---Lua 变量有三种类型：全局变量、局部变量、表中的域。
---Lua 中的变量全是全局变量，那怕是语句块或是函数里，除非用 local 显式声明为局部变量。
---局部变量的作用域为从声明位置开始到所在语句块结束。
---变量的默认值均为 nil。
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by qi.zhang.
--- DateTime: 2020/4/26 16:29
---

a = 5   --全局变量
local b = 5 --局部变量

function joke()
    c = 5   --全局变量
    local d = 6 --局部变量
end

joke()
print(c, d)

do
    local a = 6
    b = 6
    print(a, b)
end

---局部 a 不影响全局 a
print(a, b)


---赋值
---遇到赋值语句Lua会先计算右边所有的值然后再执行赋值操作，所以我们可以这样进行交换变量的值：
x, y = y, x                     -- swap 'x' for 'y'
a[i], a[j] = a[j], a[i]         -- swap 'a[i]' for 'a[j]'
---当变量个数和值的个数不一致时，Lua会一直以变量个数为基础采取以下策略：
---a. 变量个数 > 值的个数             按变量个数补足nil
---b. 变量个数 < 值的个数             多余的值会被忽略
a, b, c = 0, 1
print(a,b,c)             --> 0   1   nil

a, b = a+1, b+1, b+2     -- value of b+2 is ignored
print(a,b)               --> 1   2

a, b, c = 0
print(a,b,c)             --> 0   nil   nil